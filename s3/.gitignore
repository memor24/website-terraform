# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any `.tfvars` files that are generated automatically for each Terraform
# run. Most `.tfvars` files are managed as part of configuration and so should
# be included in version control.
#
# example `.tfvars`

# Ignore override files as they are usually used to override resources locally
# and so are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated
# pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan
# -out=tfplan
# example: *tfplan*
#
/.vscode/
*.lock.hcl
.infracost

# Ignore files generated by Visual Studio Code
.vscode/

*.key
*.log
log.*

serverless.js
*.py

.git/
images/
test_env_terraforms/


# Ignore Terraform working directories
.terraform/

# Ignore Terraform state files
*.tfstate
*.tfstate.*

# Ignore Node.js related files
node_modules/
npm-debug.log
yarn-error.log

# Ignore TypeScript compilation output
*.js.map

# Ignore compiled Python files
__pycache__/

# Ignore macOS-specific files
.DS_Store

# Ignore system-specific files
Thumbs.db

# Ignore environment configuration
.env

# Ignore editor backup files
*~

# Ignore SQLite database files
*.sqlite
*.db
